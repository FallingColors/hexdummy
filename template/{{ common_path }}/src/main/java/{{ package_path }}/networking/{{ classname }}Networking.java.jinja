{% from "macros/mappings.jinja" import mappings as _, import, ns with context -%}

package {{ package }}.networking;

import dev.architectury.networking.NetworkChannel;
{{ import(
    mojmap="net.minecraft.server.level.ServerPlayer",
    yarn="net.minecraft.server.network.ServerPlayerEntity",
) }}{% set ServerPlayer = ns.import %};

import static {{ package }}.{{ classname }}.id;

public class {{ classname }}Networking {
    private static final NetworkChannel CHANNEL = NetworkChannel.create(id("networking_channel"));

    public static void init() {
        CHANNEL.register(SetLookPitchS2CMsg.class, SetLookPitchS2CMsg::encode, SetLookPitchS2CMsg::new, SetLookPitchS2CMsg::apply);
    }

    public static <T> void sendToServer(T message) {
        CHANNEL.sendToServer(message);
    }

    public static <T> void sendToPlayer({{ ServerPlayer }} player, T message) {
        CHANNEL.sendToPlayer(player, message);
    }

    public static <T> void sendToPlayers(Iterable<{{ ServerPlayer }}> players, T message) {
        CHANNEL.sendToPlayers(players, message);
    }
}
